const int trigPin = 9;
const int echoPin = 10;
// defines variables

long duration;
int distance;

void setup() {
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  Serial.begin(9600); // Starts the serial communication
}

void loop() {
  // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  distance = duration * 0.034 / 2;
  // Prints the distance on the Serial Monitor
  Serial.print("Distance: ");
  Serial.println(distance);
  delay(300);
}






#include <Servo.h>

Servo myservo;  // create servo object to control a servo
Servo myservo2;

const int trigPin = 9;
const int echoPin = 10;

int pos = 0;    // variable to store the servo position
int distance;
long duration;

void setup() {
  //myservo.attach(5);  // Beta
  Serial.begin(9600);
  //myservo2.attach(6); //alfa
}

void loop() {

  // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  distance = duration * 0.034 / 2;

  Serial.print("Distance: ");
  Serial.println(distance);
  
  /*
  int beta = acos((pow(9.5, 2)+pow(11.5, 2)-pow(distance, 2))/2*9.5*11.5);
  int alfa = acos((pow(9.5, 2)-pow(11.5, 2)+pow(distance, 2))/2*9.5*distance);

  myservo2.write(90);

  LR = analogRead(LRpin);
  UD = analogRead(UDpin);

  UD -= 515;
  UD = UD / 200;
  if (abs(UD)>=deadzone){
    pos += UD;
  }
  // pos += 90;
  if (pos > 180) {
    pos = 180;
  }
  if (pos < 0) {
    pos = 0;
  }

  Serial.print(LR);
  Serial.print(" ");
  Serial.println(UD);

  // int pwmValue = mapNumber(pos);
  int pwmValue = pos;
  Serial.print(" ");
  Serial.println(pwmValue);

  myservo.write(pwmValue);
  delay(20); */

}

#include <Servo.h>

Servo Base; 
const int trigPin = 5;
const int echoPin = 6;
long duration;
int distance;
bool MoveSide = false;

void setup() {
  Base.write(90);
  Base.attach(9);

  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);

  Serial.begin(9600);
}

void loop() {
  /*int curr = Base.read();
  if (!MoveSide){
    if(curr > 0){
      Base.write(curr - 1);
    }
    else{
      MoveSide = true;
    }
  }
  else{
      if(curr < 180){
      Base.write(curr + 1);
    }
    else{
      MoveSide = false;
    }
  }
  delay(20);*/

  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distance = duration * 0.034 / 2;
  Serial.print("Distance: ");
  Serial.println(distance);
}





