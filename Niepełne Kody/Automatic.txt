
#include <Servo.h>

Servo myservo;  // create servo object to control a servo
Servo myservo2;

const int trigPin = 9;
const int echoPin = 10;

int pos = 0;    // variable to store the servo position
float distance;
long duration;

void setup() {
  myservo2.attach(6); //alfa
  myservo.attach(5);  // Beta
  Serial.begin(9600);
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  myservo2.write(90);
  myservo.write(180);
  
}

void loop() {

  // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  distance = duration * 0.034 / 2;
  distance += 2,5;
  if(distance >= 21){
    distance = 20.0f;
  }

  // Serial.print("Distance: ");
  // Serial.println(distance);
  
  
  double alfa = acos((pow(9.5, 2)-pow(11.5, 2)+pow(distance, 2))/(2*9.5*distance))* 57296 / 1000;
  double beta = acos((pow(9.5, 2)+pow(11.5, 2)-pow(distance, 2))/(2*9.5*11.5))* 57296 / 1000;
  int int_alfa = (int) alfa;
  int int_beta = (int) beta;

  // LR = analogRead(LRpin);
  // UD = analogRead(UDpin);

  // UD -= 515;
  // UD = UD / 200;
  // if (abs(UD)>=deadzone){
  //   pos += UD;
  // }
  // // pos += 90;
  // if (pos > 180) {
  //   pos = 180;
  // }
  // if (pos < 0) {
  //   pos = 0;
  // }

  // Serial.print(LR);
  // Serial.print(" ");
  // Serial.println(UD);

  // // int pwmValue = mapNumber(pos);
  // int pwmValue = pos;
  // Serial.print(" ");
  // Serial.println(pwmValue);

  myservo.write(int_beta + 30);
  // myservo.write(int_beta);
  Serial.print(distance);
  Serial.print(" ");
  Serial.print(int_beta);
  Serial.print(" ");
  Serial.print(int_alfa);
  Serial.println();
  myservo2.write(180 - int_alfa + 30);
  // myservo2.write(180 - int_alfa);
  delay(2000); 

}
